From 6d352f0aec6c462b8c941f6d8c1f4c57779da751 Mon Sep 17 00:00:00 2001
From: Ryan M Sullivan <Deffpatch@gmail.com>
Date: Fri, 7 Feb 2020 09:07:43 -0800
Subject: [PATCH] Sixth patch

---
 config.def.h |  1 +
 st.c         | 21 +++++++++++++++++++++
 st.h         |  1 +
 3 files changed, 23 insertions(+)

diff --git a/config.def.h b/config.def.h
index e66c6e9..9b9a0ee 100644
--- a/config.def.h
+++ b/config.def.h
@@ -201,6 +201,7 @@ static Shortcut shortcuts[] = {
 	{ TERMMOD,              XK_Num_Lock,    numlock,        {.i =  0} },
 	{ ShiftMask,            XK_Page_Up,     kscrollup,      {.i = -1} },
 	{ ShiftMask,            XK_Page_Down,   kscrolldown,    {.i = -1} },
+	{ MODKEY,               XK_Return,      newterm,        {.i =  0} },
 };
 
 /*
diff --git a/st.c b/st.c
index 130bf22..ae3ac81 100644
--- a/st.c
+++ b/st.c
@@ -161,6 +161,7 @@ typedef struct {
 } STREscape;
 
 static void execsh(char *, char **);
+static char *getcwd_by_pid(pid_t pid);
 static void stty(char **);
 static void sigchld(int);
 static void ttywriteraw(const char *, size_t);
@@ -1056,6 +1057,26 @@ tswapscreen(void)
 	tfulldirt();
 }
 
+void
+newterm(const Arg* a)
+{
+	switch (fork()) {
+	case -1:
+		die("fork failed: %s\n", strerror(errno));
+		break;
+	case 0:
+		chdir(getcwd_by_pid(pid));
+		execlp("st", "./st", NULL);
+		break;
+	}
+}
+
+static char *getcwd_by_pid(pid_t pid) {
+	char buf[32];
+	snprintf(buf, sizeof buf, "/proc/%d/cwd", pid);
+	return realpath(buf, NULL);
+}
+
 void
 kscrolldown(const Arg* a)
 {
diff --git a/st.h b/st.h
index 6cda8c8..6d0147a 100644
--- a/st.h
+++ b/st.h
@@ -83,6 +83,7 @@ void draw(void);
 
 void kscrolldown(const Arg *);
 void kscrollup(const Arg *);
+void newterm(const Arg *);
 void printscreen(const Arg *);
 void printsel(const Arg *);
 void sendbreak(const Arg *);
-- 
2.25.0

